image: maven:3-jdk-8
        
stages:
    - build
    - registry_namespace
    #- connect
    #- test
    - imageBuild
    - sonarqube
    - code-quality
    #- package
    #- deploy
    #- loadtesting
    
variables:
# MYSQL_DATABASE_NAME: "neweshop"
# MYSQL_DATABASE_SCHEMA: "$CI_PROJECT_DIR/src/main/sql/neweshop.sql"
 #MYSQL_ROOT_PASSWORD: "root"
 POM_DIR: ""
 MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
 MAVEN_EXTRA_OPTS: ""
 MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
 OPENSHIFT_SERVER: "https://ocpmacdev-lbmaster.ocpmacdev.local:8443"

#cache:
# paths:
#  - .m2/repository

build:
 stage: build
 script:
  - mvn package -Dmaven.test.skip=true -B
 artifacts:
    #name: "${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    paths:
      - target/*.war
    #  - build/libs/*.war
     # - build/docs/javadoc/*

namespace:
  stage: registry_namespace
  image: ayufan/openshift-cli
  before_script:
    - oc login "$OPENSHIFT_SERVER" --token="$OPENSHIFT_TOKEN" --insecure-skip-tls-verify
  script:
    - oc project $CI_PROJECT_NAME > /dev/null 2>&1 || oc new-project $CI_PROJECT_NAME > /dev/null 
    
docker-build:
  stage: imageBuild
  image: docker:latest
  services:
  - name: docker:dind
    command: [ "--insecure-registry=docker-registry-default.ocpapps.ocpmacdev.local:443" ]
  stage: imageBuild
  variables:
    APP: estore
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  before_script:
  - docker info
  script:
  - pwd
  - ls -l 
  - find / -name apache-tomcat-8.5.39.tar.gz
  - docker build -t docker-registry-default.ocpapps.ocpmacdev.local:443/$CI_PROJECT_NAME/$APP .
  - docker login -u adminuser -p $OPENSHIFT_TOKEN docker-registry-default.ocpapps.ocpmacdev.local:443
  - docker push docker-registry-default.ocpapps.ocpmacdev.local:443/$CI_PROJECT_NAME/$APP

sonar-qube:
  stage: sonarqube
  image: sonarqube
  #name: sonarqube
  script:
   - ./bin/run.sh

   
quality:
  stage: code-quality
  image: maven:3-jdk-8
  script: "mvn sonar:sonar -Dsonar.host.url=http://localhost:9000"
 
#connect:
 #stage: connect
 #image: mysql
 #before_script:
  #- mysql --version
 #script:
  #- mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=10.34.156.27 -e "show databases; use $MYSQL_DATABASE_NAME; show tables;"
  
#test:
 #stage: test
 #script:
  #- mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install
  #- mvn $MAVEN_CLI_OPTS test jacoco:report sonar:sonar -Dsonar.branch=sonarBranch
 #artifacts:
  #  name: "${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}_testreports"
   # paths:
    #  - target/site/jacoco/*

#package:
 #stage: package
 #script:
  #- mvn package deploy verify
 #artifacts:
   # name: "${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    #paths:
     # - $CI_PROJECT_DIR/target/
     
#deploy:
# stage: deploy
# image: williamyeh/ansible:centos7
# only:
#  - master
# tags:
#  - ansible
# before_script:
#  - ansible-playbook --version
# script:
#  - cp $CI_PROJECT_DIR/target/eStore.war /var/lib/tomcat/webapps
# - ansible-playbook /etc/ansible/tomcat.yml
#  - /bin/systemctl restart tomcat


#deploy:
 #stage: deploy
 #script:
  # - cp $CI_PROJECT_DIR/target/eStore.war /opt/eStoreWar/
   #- ansible-playbook -i hosts $CI_PROJECT_DIR/deploy.yml
   #- cp ./build/libs/eStore.war /var/lib/tomcat/webapps/eStore.war
# environment:
 #  name: deploy server1
  # url: http://104.211.228.107:8080/eStore/
  
#loadtesting:
 # stage: loadtesting
  #tags:
    #- docker
  #script:
    #- docker exec -i jmeter-client sh -c 'cat > sample-test/estore.jmx' < $CI_PROJECT_DIR/jmeter/estore.jmx
    #- docker exec -i jmeter-client bin/bash -c " jmeter -n -t /sample-test/estore.jmx "
    #- /opt/apache-jmeter-4.0/bin/jmeter -Juser.classpath=/opt/JMeter-InfluxBD-Writer/JMeter-InfluxDB-Writer-plugin-1.2.jar -n -t $CI_PROJECT_DIR/jmeter/estore.jmx
   # - /opt/apache-jmeter-3.3/bin/jmeter -n -t $CI_PROJECT_DIR/jmeter/estore.jmx
    #- exit
  #when: manual